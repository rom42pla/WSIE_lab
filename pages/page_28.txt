https://www.python.org/dev/peps/pep-0502/#id8

<!doctype html>
<!--[if lt IE 7]>   <html class="no-js ie6 lt-ie7 lt-ie8 lt-ie9">   <![endif]-->
<!--[if IE 7]>      <html class="no-js ie7 lt-ie8 lt-ie9">          <![endif]-->
<!--[if IE 8]>      <html class="no-js ie8 lt-ie9">                 <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en" dir="ltr">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <link rel="prefetch" href="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"> 
  <meta name="application-name" content="Python.org"> 
  <meta name="msapplication-tooltip" content="The official home of the Python Programming Language"> 
  <meta name="apple-mobile-web-app-title" content="Python.org"> 
  <meta name="apple-mobile-web-app-capable" content="yes"> 
  <meta name="apple-mobile-web-app-status-bar-style" content="black"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <meta name="HandheldFriendly" content="True"> 
  <meta name="format-detection" content="telephone=no"> 
  <meta http-equiv="cleartype" content="on"> 
  <meta http-equiv="imagetoolbar" content="false"> 
  <script src="/static/js/libs/modernizr.js"></script> 
  <link href="/static/stylesheets/style.67f4b30f7483.css" rel="stylesheet" type="text/css" title="default"> 
  <link href="/static/stylesheets/mq.3ae8e02ece5b.css" rel="stylesheet" type="text/css" media="not print, braille, embossed, speech, tty"> 
  <!--[if (lte IE 8)&(!IEMobile)]>
    <link href="/static/stylesheets/no-mq.fcf414dc68a3.css" rel="stylesheet" type="text/css" media="screen" />
    
    
    <![endif]--> 
  <link rel="icon" type="image/x-icon" href="/static/favicon.ico"> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/static/apple-touch-icon-144x144-precomposed.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/static/apple-touch-icon-114x114-precomposed.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="/static/apple-touch-icon-72x72-precomposed.png"> 
  <link rel="apple-touch-icon-precomposed" href="/static/apple-touch-icon-precomposed.png"> 
  <link rel="apple-touch-icon" href="/static/apple-touch-icon-precomposed.png"> 
  <meta name="msapplication-TileImage" content="/static/metro-icon-144x144-precomposed.png">
  <!-- white shape --> 
  <meta name="msapplication-TileColor" content="#3673a5">
  <!-- python blue --> 
  <meta name="msapplication-navbutton-color" content="#3673a5"> 
  <title>PEP 502 -- String Interpolation - Extended Discussion | Python.org</title> 
  <meta name="description" content="The official home of the Python Programming Language"> 
  <meta name="keywords" content="Python programming language object oriented web free open source software license documentation download community"> 
  <meta property="og:type" content="website"> 
  <meta property="og:site_name" content="Python.org"> 
  <meta property="og:title" content="PEP 502 -- String Interpolation - Extended Discussion"> 
  <meta property="og:description" content="The official home of the Python Programming Language"> 
  <meta property="og:image" content="https://www.python.org/static/opengraph-icon-200x200.png"> 
  <meta property="og:image:secure_url" content="https://www.python.org/static/opengraph-icon-200x200.png"> 
  <meta property="og:url" content="https://www.python.org/dev/peps/pep-0502/"> 
  <link rel="author" href="/static/humans.txt"> 
  <link rel="alternate" type="application/rss+xml" title="Python Enhancement Proposals" href="https://www.python.org/dev/peps/peps.rss/"> 
  <link rel="alternate" type="application/rss+xml" title="Python Job Opportunities" href="https://www.python.org/jobs/feed/rss/"> 
  <link rel="alternate" type="application/rss+xml" title="Python Software Foundation News" href="https://feeds.feedburner.com/PythonSoftwareFoundationNews"> 
  <link rel="alternate" type="application/rss+xml" title="Python Insider" href="https://feeds.feedburner.com/PythonInsider"> 
  <script type="application/ld+json">
     {
       "@context": "https://schema.org",
       "@type": "WebSite",
       "url": "https://www.python.org/",
       "potentialAction": {
         "@type": "SearchAction",
         "target": "https://www.python.org/search/?q={search_term_string}",
         "query-input": "required name=search_term_string"
       }
     }
    </script> 
  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-39055973-1']);
    _gaq.push(['_trackPageview']);

    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
    </script> 
 </head> 
 <body class="python pages pep-page"> 
  <div id="touchnav-wrapper"> 
   <div id="nojs" class="do-not-print"> 
    <p><strong>Notice:</strong> While Javascript is not essential for this website, your interaction with the content will be limited. Please turn Javascript on for the full experience. </p> 
   </div> 
   <!--[if lte IE 8]>
        <div id="oldie-warning" class="do-not-print">
            <p>
                <strong>Notice:</strong> Your browser is <em>ancient</em>. Please
                <a href="http://browsehappy.com/">upgrade to a different browser</a> to experience a better web.
            </p>
        </div>
        <![endif]--> 
   <!-- Sister Site Links --> 
   <div id="top" class="top-bar do-not-print"> 
    <nav class="meta-navigation container" role="navigation"> 
     <div class="skip-link screen-reader-text"> 
      <a href="#content" title="Skip to content">Skip to content</a> 
     </div> 
     <a id="close-python-network" class="jump-link" href="#python-network" aria-hidden="true"> <span aria-hidden="true" class="icon-arrow-down"><span>▼</span></span> Close </a> 
     <ul class="menu" role="tree"> 
      <li class="python-meta "> <a href="/" title="The Python Programming Language">Python</a> </li> 
      <li class="psf-meta "> <a href="/psf-landing/" title="The Python Software Foundation">PSF</a> </li> 
      <li class="docs-meta "> <a href="https://docs.python.org" title="Python Documentation">Docs</a> </li> 
      <li class="pypi-meta "> <a href="https://pypi.python.org/" title="Python Package Index">PyPI</a> </li> 
      <li class="jobs-meta "> <a href="/jobs/" title="Python Job Board">Jobs</a> </li> 
      <li class="shop-meta "> <a href="/community/" title="Python Community">Community</a> </li> 
     </ul> 
     <a id="python-network" class="jump-link" href="#top" aria-hidden="true"> <span aria-hidden="true" class="icon-arrow-up"><span>▲</span></span> The Python Network </a> 
    </nav> 
   </div> 
   <!-- Header elements --> 
   <header class="main-header" role="banner"> 
    <div class="container"> 
     <h1 class="site-headline"> <a href="/"><img class="python-logo" src="/static/img/python-logo.png" alt="python™"></a> </h1> 
     <div class="options-bar-container do-not-print"> 
      <a href="/psf/donations/" class="donate-button">Donate</a> 
      <div class="options-bar"> 
       <a id="site-map-link" class="jump-to-menu" href="#site-map"><span class="menu-icon">≡</span> Menu</a>
       <form class="search-the-site" action="/search/" method="get"> 
        <fieldset title="Search Python.org"> 
         <span aria-hidden="true" class="icon-search"></span> 
         <label class="screen-reader-text" for="id-search-field">Search This Site</label> 
         <input id="id-search-field" name="q" type="search" role="textbox" class="search-field" placeholder="Search" value="" tabindex="1"> 
         <button type="submit" name="submit" id="submit" class="search-button" title="Submit this Search" tabindex="3"> GO </button> 
         <!--[if IE]><input type="text" style="display: none;" disabled="disabled" size="1" tabindex="4"><![endif]--> 
        </fieldset> 
       </form>
       <span class="breaker"></span>
       <div class="adjust-font-size" aria-hidden="true"> 
        <ul class="navigation menu" aria-label="Adjust Text Size on Page"> 
         <li class="tier-1 last" aria-haspopup="true"> <a href="#" class="action-trigger"><strong><small>A</small> A</strong></a> 
          <ul class="subnav menu"> 
           <li class="tier-2 element-1" role="treeitem"><a class="text-shrink" title="Make Text Smaller" href="javascript:;">Smaller</a></li> 
           <li class="tier-2 element-2" role="treeitem"><a class="text-grow" title="Make Text Larger" href="javascript:;">Larger</a></li> 
           <li class="tier-2 element-3" role="treeitem"><a class="text-reset" title="Reset any font size changes I have made" href="javascript:;">Reset</a></li> 
          </ul> </li> 
        </ul> 
       </div>
       <div class="winkwink-nudgenudge"> 
        <ul class="navigation menu" aria-label="Social Media Navigation"> 
         <li class="tier-1 last" aria-haspopup="true"> <a href="#" class="action-trigger">Socialize</a> 
          <ul class="subnav menu"> 
           <li class="tier-2 element-1" role="treeitem"><a href="https://www.facebook.com/pythonlang?fref=ts"><span aria-hidden="true" class="icon-facebook"></span>Facebook</a></li> 
           <li class="tier-2 element-2" role="treeitem"><a href="https://twitter.com/ThePSF"><span aria-hidden="true" class="icon-twitter"></span>Twitter</a></li> 
           <li class="tier-2 element-3" role="treeitem"><a href="/community/irc/"><span aria-hidden="true" class="icon-freenode"></span>Chat on IRC</a></li> 
          </ul> </li> 
        </ul> 
       </div> 
       <span data-html-include="/authenticated"></span> 
      </div>
      <!-- end options-bar --> 
     </div> 
     <nav id="mainnav" class="python-navigation main-navigation do-not-print" role="navigation"> 
      <ul class="navigation menu" role="menubar" aria-label="Main Navigation"> 
       <li id="about" class="tier-1 element-1  " aria-haspopup="true"> <a href="/about/" title="" class="">About</a> 
        <ul class="subnav menu" role="menu" aria-hidden="true"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/about/apps/" title="">Applications</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/about/quotes/" title="">Quotes</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/about/gettingstarted/" title="">Getting Started</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/about/help/" title="">Help</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="http://brochure.getpython.info/" title="">Python Brochure</a></li> 
        </ul> </li> 
       <li id="downloads" class="tier-1 element-2  " aria-haspopup="true"> <a href="/downloads/" title="" class="">Downloads</a> 
        <ul class="subnav menu" role="menu" aria-hidden="true"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/downloads/" title="">All releases</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/downloads/source/" title="">Source code</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/downloads/windows/" title="">Windows</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/downloads/mac-osx/" title="">Mac OS X</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="/download/other/" title="">Other Platforms</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="https://docs.python.org/3/license.html" title="">License</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="/download/alternatives" title="">Alternative Implementations</a></li> 
        </ul> </li> 
       <li id="documentation" class="tier-1 element-3  " aria-haspopup="true"> <a href="/doc/" title="" class="">Documentation</a> 
        <ul class="subnav menu" role="menu" aria-hidden="true"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/doc/" title="">Docs</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/doc/av" title="">Audio/Visual Talks</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="https://wiki.python.org/moin/BeginnersGuide" title="">Beginner's Guide</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="https://devguide.python.org/" title="">Developer's Guide</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="https://docs.python.org/faq/" title="">FAQ</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="http://wiki.python.org/moin/Languages" title="">Non-English Docs</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="http://python.org/dev/peps/" title="">PEP Index</a></li> 
         <li class="tier-2 element-8" role="treeitem"><a href="https://wiki.python.org/moin/PythonBooks" title="">Python Books</a></li> 
         <li class="tier-2 element-9" role="treeitem"><a href="/doc/essays/" title="">Python Essays</a></li> 
        </ul> </li> 
       <li id="community" class="tier-1 element-4  " aria-haspopup="true"> <a href="/community/" title="" class="">Community</a> 
        <ul class="subnav menu" role="menu" aria-hidden="true"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/community/survey" title="">Community Survey</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/community/diversity/" title="">Diversity</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/community/lists/" title="">Mailing Lists</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/community/irc/" title="">IRC</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="/community/forums/" title="">Forums</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="/psf/annual-report/2019/" title="">PSF Annual Impact Report</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="/community/workshops/" title="">Python Conferences</a></li> 
         <li class="tier-2 element-8" role="treeitem"><a href="/community/sigs/" title="">Special Interest Groups</a></li> 
         <li class="tier-2 element-9" role="treeitem"><a href="/community/logos/" title="">Python Logo</a></li> 
         <li class="tier-2 element-10" role="treeitem"><a href="https://wiki.python.org/moin/" title="">Python Wiki</a></li> 
         <li class="tier-2 element-11" role="treeitem"><a href="/community/merchandise/" title="">Merchandise</a></li> 
         <li class="tier-2 element-12" role="treeitem"><a href="/community/awards" title="">Community Awards</a></li> 
         <li class="tier-2 element-13" role="treeitem"><a href="/psf/conduct/" title="">Code of Conduct</a></li> 
        </ul> </li> 
       <li id="success-stories" class="tier-1 element-5  " aria-haspopup="true"> <a href="/success-stories/" title="success-stories" class="">Success Stories</a> 
        <ul class="subnav menu" role="menu" aria-hidden="true"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/success-stories/category/arts/" title="">Arts</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/success-stories/category/business/" title="">Business</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/success-stories/category/education/" title="">Education</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/success-stories/category/engineering/" title="">Engineering</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="/success-stories/category/government/" title="">Government</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="/success-stories/category/scientific/" title="">Scientific</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="/success-stories/category/software-development/" title="">Software Development</a></li> 
        </ul> </li> 
       <li id="news" class="tier-1 element-6  " aria-haspopup="true"> <a href="/blogs/" title="News from around the Python world" class="">News</a> 
        <ul class="subnav menu" role="menu" aria-hidden="true"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/blogs/" title="Python Insider Blog Posts">Python News</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/psf/newsletter/" title="Python Software Foundation Newsletter">PSF Newsletter</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="http://planetpython.org/" title="Planet Python">Community News</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="http://pyfound.blogspot.com/" title="PSF Blog">PSF News</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="http://pycon.blogspot.com/" title="PyCon Blog">PyCon News</a></li> 
        </ul> </li> 
       <li id="events" class="tier-1 element-7  " aria-haspopup="true"> <a href="/events/" title="" class="">Events</a> 
        <ul class="subnav menu" role="menu" aria-hidden="true"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/events/python-events" title="">Python Events</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/events/python-user-group/" title="">User Group Events</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/events/python-events/past/" title="">Python Events Archive</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/events/python-user-group/past/" title="">User Group Events Archive</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="https://wiki.python.org/moin/PythonEventsCalendar#Submitting_an_Event" title="">Submit an Event</a></li> 
        </ul> </li> 
      </ul> 
     </nav> 
     <div class="header-banner "> 
      <!-- for optional "do-not-print" class --> 
     </div> 
    </div>
    <!-- end .container --> 
   </header> 
   <div id="content" class="content-wrapper"> 
    <!-- Main Content Column --> 
    <div class="container"> 
     <section class="main-content with-left-sidebar" role="main"> 
      <ul class="breadcrumbs menu"> 
       <li> <a href="/" title="The Python Programming Language">Python</a><span class="prompt">&gt;&gt;&gt;</span> </li> 
       <li> <a href="/dev/">Python Developer's Guide</a><span class="prompt">&gt;&gt;&gt;</span> </li> 
       <li> <a href="/dev/peps/">PEP Index</a><span class="prompt">&gt;&gt;&gt;</span> </li> 
       <li>PEP 502 -- String Interpolation - Extended Discussion</li> 
      </ul> 
      <style>
   .pep-page pre {
        padding: .5em;
        background: inherit;
        border-left: 0px;
        -webkit-box-shadow: 0 0 0 0;
        -moz-box-shadow: 0 0 0 0;
        box-shadow: 0 0 0 0;
   }
   .pep-page pre.literal-block {
       background-color: #e6e8ea;
       border: 1px solid #ddd;
       padding: 1em;
       -webkit-box-shadow: 0 0 1em rgba( 0, 0, 0, 0.2 );
       -moz-box-shadow: 0 0 1em rgba( 0, 0, 0, 0.2 );
       box-shadow: 0 0 1em rgba( 0, 0, 0, 0.2 );
   }
</style> 
      <article class="text"> 
       <header class="article-header"> 
        <h1 class="page-title">PEP 502 -- String Interpolation - Extended Discussion</h1> 
       </header> 
       <!--
This HTML is auto-generated.  DO NOT EDIT THIS FILE!  If you are writing a new
PEP, see http://www.python.org/dev/peps/pep-0001 for instructions and links
to templates.  DO NOT USE THIS HTML FILE AS YOUR TEMPLATE!
-->
       <table class="rfc2822 docutils field-list" frame="void" rules="none"> 
        <colgroup>
         <col class="field-name"> 
         <col class="field-body"> 
        </colgroup>
        <tbody valign="top"> 
         <tr class="field">
          <th class="field-name">PEP:</th>
          <td class="field-body">502</td> 
         </tr> 
         <tr class="field">
          <th class="field-name">Title:</th>
          <td class="field-body">String Interpolation - Extended Discussion</td> 
         </tr> 
         <tr class="field">
          <th class="field-name">Author:</th>
          <td class="field-body">Mike G. Miller</td> 
         </tr> 
         <tr class="field">
          <th class="field-name">Status:</th>
          <td class="field-body">Rejected</td> 
         </tr> 
         <tr class="field">
          <th class="field-name">Type:</th>
          <td class="field-body">Informational</td> 
         </tr> 
         <tr class="field">
          <th class="field-name">Created:</th>
          <td class="field-body">10-Aug-2015</td> 
         </tr> 
         <tr class="field">
          <th class="field-name">Python-Version:</th>
          <td class="field-body">3.6</td> 
         </tr> 
        </tbody> 
       </table> 
       <hr> 
       <div class="contents topic" id="contents"> 
        <p class="topic-title">Contents</p> 
        <ul class="simple"> 
         <li><a class="reference internal" href="#abstract" id="id67">Abstract</a></li> 
         <li><a class="reference internal" href="#pep-status" id="id68">PEP Status</a></li> 
         <li><a class="reference internal" href="#motivation" id="id69">Motivation</a></li> 
         <li><a class="reference internal" href="#rationale" id="id70">Rationale</a>
          <ul> 
           <li><a class="reference internal" href="#goals" id="id71">Goals</a></li> 
           <li><a class="reference internal" href="#limitations" id="id72">Limitations</a></li> 
           <li><a class="reference internal" href="#background" id="id73">Background</a>
            <ul> 
             <li><a class="reference internal" href="#printf-style-formatting-via-operator" id="id74">Printf-style formatting, via operator</a></li> 
             <li><a class="reference internal" href="#string-template-class" id="id75">string.Template Class</a></li> 
             <li><a class="reference internal" href="#pep-215-string-interpolation" id="id76">PEP 215 - String Interpolation</a></li> 
             <li><a class="reference internal" href="#str-format-method" id="id77">str.format() Method</a></li> 
             <li><a class="reference internal" href="#pep-498-literal-string-formatting" id="id78">PEP 498 -- Literal String Formatting</a></li> 
             <li><a class="reference internal" href="#pep-501-translation-ready-string-interpolation" id="id79">PEP 501 -- Translation ready string interpolation</a></li> 
            </ul> </li> 
           <li><a class="reference internal" href="#implementations-in-other-languages" id="id80">Implementations in Other Languages</a>
            <ul> 
             <li><a class="reference internal" href="#bash" id="id81">Bash</a></li> 
             <li><a class="reference internal" href="#perl" id="id82">Perl</a></li> 
             <li><a class="reference internal" href="#ruby" id="id83">Ruby</a></li> 
             <li><a class="reference internal" href="#others" id="id84">Others</a></li> 
             <li><a class="reference internal" href="#scala" id="id85">Scala</a></li> 
             <li><a class="reference internal" href="#es6-javascript" id="id86">ES6 (Javascript)</a></li> 
             <li><a class="reference internal" href="#c-version-6" id="id87">C#, Version 6</a></li> 
             <li><a class="reference internal" href="#apple-s-swift" id="id88">Apple's Swift</a></li> 
             <li><a class="reference internal" href="#additional-examples" id="id89">Additional examples</a></li> 
            </ul> </li> 
           <li><a class="reference internal" href="#new-syntax" id="id90">New Syntax</a></li> 
           <li><a class="reference internal" href="#new-string-prefix" id="id91">New String Prefix</a></li> 
          </ul> </li> 
         <li><a class="reference internal" href="#additional-topics" id="id92">Additional Topics</a>
          <ul> 
           <li><a class="reference internal" href="#safety" id="id93">Safety</a>
            <ul> 
             <li><a class="reference internal" href="#mitigation-via-tools" id="id94">Mitigation via Tools</a></li> 
            </ul> </li> 
           <li><a class="reference internal" href="#style-guide-precautions" id="id95">Style Guide/Precautions</a></li> 
           <li><a class="reference internal" href="#reference-implementation-s" id="id96">Reference Implementation(s)</a></li> 
           <li><a class="reference internal" href="#backwards-compatibility" id="id97">Backwards Compatibility</a></li> 
           <li><a class="reference internal" href="#postponed-ideas" id="id98">Postponed Ideas</a>
            <ul> 
             <li><a class="reference internal" href="#internationalization" id="id99">Internationalization</a></li> 
            </ul> </li> 
           <li><a class="reference internal" href="#rejected-ideas" id="id100">Rejected Ideas</a>
            <ul> 
             <li><a class="reference internal" href="#restricting-syntax-to-str-format-only" id="id101">Restricting Syntax to <tt class="docutils literal">str.format()</tt> Only</a></li> 
             <li><a class="reference internal" href="#additional-custom-string-prefixes" id="id102">Additional/Custom String-Prefixes</a></li> 
             <li><a class="reference internal" href="#automated-escaping-of-input-variables" id="id103">Automated Escaping of Input Variables</a></li> 
             <li><a class="reference internal" href="#environment-access-and-command-substitution" id="id104">Environment Access and Command Substitution</a></li> 
            </ul> </li> 
          </ul> </li> 
         <li><a class="reference internal" href="#acknowledgements" id="id105">Acknowledgements</a></li> 
         <li><a class="reference internal" href="#references" id="id106">References</a></li> 
         <li><a class="reference internal" href="#copyright" id="id107">Copyright</a></li> 
        </ul> 
       </div> 
       <div class="section" id="abstract"> 
        <h1><a class="toc-backref" href="#id67">Abstract</a></h1> 
        <p><a class="reference external" href="/dev/peps/pep-0498">PEP 498</a>: <em>Literal String Interpolation</em>, which proposed "formatted strings" was accepted September 9th, 2015. Additional background and rationale given during its design phase is detailed below.</p> 
        <p>To recap that PEP, a string prefix was introduced that marks the string as a template to be rendered. These formatted strings may contain one or more expressions built on <a class="reference external" href="https://docs.python.org/3/library/string.html#format-string-syntax">the existing syntax</a> <a class="footnote-reference" href="#id29" id="id30">[16]</a> of <tt class="docutils literal">str.format()</tt>. The formatted string expands at compile-time into a conventional string format operation, with the given expressions from its text extracted and passed instead as positional arguments.</p> 
        <p>At runtime, the resulting expressions are evaluated to render a string to given specifications:</p> 
        <pre class="literal-block">&gt;&gt;&gt; location = 'World'
&gt;&gt;&gt; f'Hello, {location} !'      # new prefix: f''
'Hello, World !'                # interpolated result
</pre> 
        <p>Format-strings may be thought of as merely syntactic sugar to simplify traditional calls to <tt class="docutils literal">str.format()</tt>.</p> 
       </div> 
       <div class="section" id="pep-status"> 
        <h1><a class="toc-backref" href="#id68">PEP Status</a></h1> 
        <p>This PEP was rejected based on its using an opinion-based tone rather than a factual one. This PEP was also deemed not critical as <a class="reference external" href="/dev/peps/pep-0498">PEP 498</a> was already written and should be the place to house design decision details.</p> 
       </div> 
       <div class="section" id="motivation"> 
        <h1><a class="toc-backref" href="#id69">Motivation</a></h1> 
        <p>Though string formatting and manipulation features are plentiful in Python, one area where it falls short is the lack of a convenient string interpolation syntax. In comparison to other dynamic scripting languages with similar use cases, the amount of code necessary to build similar strings is substantially higher, while at times offering lower readability due to verbosity, dense syntax, or identifier duplication.</p> 
        <p>These difficulties are described at moderate length in the original <a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-July/034659.html">post to python-ideas</a> <a class="footnote-reference" href="#id31" id="id32">[17]</a> that started the snowball (that became <a class="reference external" href="/dev/peps/pep-0498">PEP 498</a>) rolling. <a class="footnote-reference" href="#id14" id="id1">[1]</a></p> 
        <p>Furthermore, replacement of the print statement with the more consistent print function of Python 3 (<a class="reference external" href="/dev/peps/pep-3105">PEP 3105</a>) has added one additional minor burden, an additional set of parentheses to type and read. Combined with the verbosity of current string formatting solutions, this puts an otherwise simple language at an unfortunate disadvantage to its peers:</p> 
        <pre class="literal-block">echo "Hello, user: $user, id: $id, on host: $hostname"              # bash
say  "Hello, user: $user, id: $id, on host: $hostname";             # perl
puts "Hello, user: #{user}, id: #{id}, on host: #{hostname}\n"      # ruby
                                                                    # 80 ch --&gt;|
# Python 3, str.format with named parameters
print('Hello, user: {user}, id: {id}, on host: {hostname}'.format(**locals()))

# Python 3, worst case
print('Hello, user: {user}, id: {id}, on host: {hostname}'.format(user=user,
                                                                  id=id,
                                                                  hostname=
                                                                    hostname))
</pre> 
        <p>In Python, the formatting and printing of a string with multiple variables in a single line of code of standard width is noticeably harder and more verbose, with indentation exacerbating the issue.</p> 
        <p>For use cases such as smaller projects, systems programming, shell script replacements, and even one-liners, where message formatting complexity has yet to be encapsulated, this verbosity has likely lead a significant number of developers and administrators to choose other languages over the years.</p> 
       </div> 
       <div class="section" id="rationale"> 
        <h1><a class="toc-backref" href="#id70">Rationale</a></h1> 
        <div class="section" id="goals"> 
         <h2><a class="toc-backref" href="#id71">Goals</a></h2> 
         <p>The design goals of format strings are as follows:</p> 
         <ol class="arabic simple"> 
          <li>Eliminate need to pass variables manually.</li> 
          <li>Eliminate repetition of identifiers and redundant parentheses.</li> 
          <li>Reduce awkward syntax, punctuation characters, and visual noise.</li> 
          <li>Improve readability and eliminate mismatch errors, by preferring named parameters to positional arguments.</li> 
          <li>Avoid need for <tt class="docutils literal">locals()</tt> and <tt class="docutils literal">globals()</tt> usage, instead parsing the given string for named parameters, then passing them automatically. <a class="footnote-reference" href="#id15" id="id2">[2]</a> <a class="footnote-reference" href="#id16" id="id3">[3]</a></li> 
         </ol> 
        </div> 
        <div class="section" id="limitations"> 
         <h2><a class="toc-backref" href="#id72">Limitations</a></h2> 
         <p>In contrast to other languages that take design cues from Unix and its shells, and in common with Javascript, Python specified both single (<tt class="docutils literal">'</tt>) and double (<tt class="docutils literal">"</tt>) ASCII quote characters to enclose strings. It is not reasonable to choose one of them now to enable interpolation, while leaving the other for uninterpolated strings. Other characters, such as the "Backtick" (or grave accent <tt class="docutils literal">`</tt>) are also <a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2007-January/000054.html">constrained by history</a> <a class="footnote-reference" href="#id33" id="id34">[18]</a> as a shortcut for <tt class="docutils literal">repr()</tt>.</p> 
         <p>This leaves a few remaining options for the design of such a feature:</p> 
         <ul class="simple"> 
          <li>An operator, as in printf-style string formatting via <tt class="docutils literal">%</tt>.</li> 
          <li>A class, such as <tt class="docutils literal">string.Template()</tt>.</li> 
          <li>A method or function, such as <tt class="docutils literal">str.format()</tt>.</li> 
          <li>New syntax, or</li> 
          <li>A new string prefix marker, such as the well-known <tt class="docutils literal">r''</tt> or <tt class="docutils literal">u''</tt>.</li> 
         </ul> 
         <p>The first three options above are mature. Each has specific use cases and drawbacks, yet also suffer from the verbosity and visual noise mentioned previously. All options are discussed in the next sections.</p> 
        </div> 
        <div class="section" id="background"> 
         <h2><a class="toc-backref" href="#id73">Background</a></h2> 
         <p>Formatted strings build on several existing techniques and proposals and what we've collectively learned from them. In keeping with the design goals of readability and error-prevention, the following examples therefore use named, not positional arguments.</p> 
         <p>Let's assume we have the following dictionary, and would like to print out its items as an informative string for end users:</p> 
         <pre class="literal-block">&gt;&gt;&gt; params = {'user': 'nobody', 'id': 9, 'hostname': 'darkstar'}
</pre> 
         <div class="section" id="printf-style-formatting-via-operator"> 
          <h3><a class="toc-backref" href="#id74">Printf-style formatting, via operator</a></h3> 
          <p>This <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting">venerable technique</a> <a class="footnote-reference" href="#id35" id="id36">[19]</a> continues to have its uses, such as with byte-based protocols, simplicity in simple cases, and familiarity to many programmers:</p> 
          <pre class="literal-block">&gt;&gt;&gt; 'Hello, user: %(user)s, id: %(id)s, on host: %(hostname)s' % params
'Hello, user: nobody, id: 9, on host: darkstar'
</pre> 
          <p>In this form, considering the prerequisite dictionary creation, the technique is verbose, a tad noisy, yet relatively readable. Additional issues are that an operator can only take one argument besides the original string, meaning multiple parameters must be passed in a tuple or dictionary. Also, it is relatively easy to make an error in the number of arguments passed, the expected type, have a missing key, or forget the trailing type, e.g. (<tt class="docutils literal">s</tt> or <tt class="docutils literal">d</tt>).</p> 
         </div> 
         <div class="section" id="string-template-class"> 
          <h3><a class="toc-backref" href="#id75">string.Template Class</a></h3> 
          <p>The <tt class="docutils literal">string.Template</tt> <a class="reference external" href="https://docs.python.org/3/library/string.html#template-strings">class from</a> <a class="footnote-reference" href="#id37" id="id38">[20]</a> <a class="reference external" href="/dev/peps/pep-0292">PEP 292</a> (Simpler String Substitutions) is a purposely simplified design, using familiar shell interpolation syntax, with <a class="reference external" href="https://docs.python.org/3/library/string.html#string.Template.safe_substitute">safe-substitution feature</a> <a class="footnote-reference" href="#id39" id="id40">[21]</a>, that finds its main use cases in shell and internationalization tools:</p> 
          <pre class="literal-block">Template('Hello, user: $user, id: ${id}, on host: $hostname').substitute(params)
</pre> 
          <p>While also verbose, the string itself is readable. Though functionality is limited, it meets its requirements well. It isn't powerful enough for many cases, and that helps keep inexperienced users out of trouble, as well as avoiding issues with moderately-trusted input (i18n) from third-parties. It unfortunately takes enough code to discourage its use for ad-hoc string interpolation, unless encapsulated in a <a class="reference external" href="http://pythonhosted.org/flufl.i18n/">convenience library</a> <a class="footnote-reference" href="#id41" id="id42">[22]</a> such as <tt class="docutils literal">flufl.i18n</tt>.</p> 
         </div> 
         <div class="section" id="pep-215-string-interpolation"> 
          <h3><a class="reference external" href="/dev/peps/pep-0215">PEP 215</a> - String Interpolation</h3> 
          <p><a class="reference external" href="/dev/peps/pep-0215">PEP 215</a> was a former proposal of which this one shares a lot in common. Apparently, the world was not ready for it at the time, but considering recent support in a number of other languages, its day may have come.</p> 
          <p>The large number of dollar sign (<tt class="docutils literal">$</tt>) characters it included may have led it to resemble Python's arch-nemesis Perl, and likely contributed to the PEP's lack of acceptance. It was superseded by the following proposal.</p> 
         </div> 
         <div class="section" id="str-format-method"> 
          <h3><a class="toc-backref" href="#id77">str.format() Method</a></h3> 
          <p>The <tt class="docutils literal">str.format()</tt> <a class="reference external" href="https://docs.python.org/3/library/string.html#format-string-syntax">syntax of</a> <a class="footnote-reference" href="#id29" id="id43">[16]</a> <a class="reference external" href="/dev/peps/pep-3101">PEP 3101</a> is the most recent and modern of the existing options. It is also more powerful and usually easier to read than the others. It avoids many of the drawbacks and limits of the previous techniques.</p> 
          <p>However, due to its necessary function call and parameter passing, it runs from verbose to very verbose in various situations with string literals:</p> 
          <pre class="literal-block">&gt;&gt;&gt; 'Hello, user: {user}, id: {id}, on host: {hostname}'.format(**params)
'Hello, user: nobody, id: 9, on host: darkstar'

# when using keyword args, var name shortening sometimes needed to fit :/
&gt;&gt;&gt; 'Hello, user: {user}, id: {id}, on host: {host}'.format(user=user,
                                                            id=id,
                                                            host=hostname)
'Hello, user: nobody, id: 9, on host: darkstar'
</pre> 
          <p>The verbosity of the method-based approach is illustrated here.</p> 
         </div> 
         <div class="section" id="pep-498-literal-string-formatting"> 
          <h3><a class="reference external" href="/dev/peps/pep-0498">PEP 498</a> -- Literal String Formatting</h3> 
          <p><a class="reference external" href="/dev/peps/pep-0498">PEP 498</a> defines and discusses format strings, as also described in the <a class="reference internal" href="#abstract">Abstract</a> above.</p> 
          <p>It also, somewhat controversially to those first exposed, introduces the idea that format-strings shall be augmented with support for arbitrary expressions. This is discussed further in the Restricting Syntax section under <a class="reference internal" href="#rejected-ideas">Rejected Ideas</a>.</p> 
         </div> 
         <div class="section" id="pep-501-translation-ready-string-interpolation"> 
          <h3><a class="reference external" href="/dev/peps/pep-0501">PEP 501</a> -- Translation ready string interpolation</h3> 
          <p>The complimentary <a class="reference external" href="/dev/peps/pep-0501">PEP 501</a> brings internationalization into the discussion as a first-class concern, with its proposal of the i-prefix, <tt class="docutils literal">string.Template</tt> syntax integration compatible with ES6 (Javascript), deferred rendering, and an object return value.</p> 
         </div> 
        </div> 
        <div class="section" id="implementations-in-other-languages"> 
         <h2><a class="toc-backref" href="#id80">Implementations in Other Languages</a></h2> 
         <p>String interpolation is now well supported by various programming languages used in multiple industries, and is converging into a standard of sorts. It is centered around <tt class="docutils literal">str.format()</tt> style syntax in minor variations, with the addition of arbitrary expressions to expand utility.</p> 
         <p>In the <a class="reference internal" href="#motivation">Motivation</a> section it was shown how convenient interpolation syntax existed in Bash, Perl, and Ruby. Let's take a look at their expression support.</p> 
         <div class="section" id="bash"> 
          <h3><a class="toc-backref" href="#id81">Bash</a></h3> 
          <p>Bash supports a number of arbitrary, even recursive constructs inside strings:</p> 
          <pre class="literal-block">&gt; echo "user: $USER, id: $((id + 6)) on host: $(echo is $(hostname))"
user: nobody, id: 15 on host: is darkstar
</pre> 
          <ul class="simple"> 
           <li>Explicit interpolation within double quotes.</li> 
           <li>Direct environment variable access supported.</li> 
           <li>Arbitrary expressions are supported. <a class="footnote-reference" href="#id17" id="id4">[4]</a></li> 
           <li>External process execution and output capture supported. <a class="footnote-reference" href="#id18" id="id5">[5]</a></li> 
           <li>Recursive expressions are supported.</li> 
          </ul> 
         </div> 
         <div class="section" id="perl"> 
          <h3><a class="toc-backref" href="#id82">Perl</a></h3> 
          <p>Perl also has arbitrary expression constructs, perhaps not as well known:</p> 
          <pre class="literal-block">say "I have @{[$id + 6]} guanacos.";                # lists
say "I have ${\($id + 6)} guanacos.";               # scalars
say "Hello { @names.join(', ') } how are you?";     # Perl 6 version
</pre> 
          <ul class="simple"> 
           <li>Explicit interpolation within double quotes.</li> 
           <li>Arbitrary expressions are supported. <a class="footnote-reference" href="#id19" id="id6">[6]</a> <a class="footnote-reference" href="#id20" id="id7">[7]</a></li> 
          </ul> 
         </div> 
         <div class="section" id="ruby"> 
          <h3><a class="toc-backref" href="#id83">Ruby</a></h3> 
          <p>Ruby allows arbitrary expressions in its interpolated strings:</p> 
          <pre class="literal-block">puts "One plus one is two: #{1 + 1}\n"
</pre> 
          <ul class="simple"> 
           <li>Explicit interpolation within double quotes.</li> 
           <li>Arbitrary expressions are supported. <a class="footnote-reference" href="#id21" id="id8">[8]</a> <a class="footnote-reference" href="#id22" id="id9">[9]</a></li> 
           <li>Possible to change delimiter chars with <tt class="docutils literal">%</tt>.</li> 
           <li>See the Reference Implementation(s) section for an implementation in Python.</li> 
          </ul> 
         </div> 
         <div class="section" id="others"> 
          <h3><a class="toc-backref" href="#id84">Others</a></h3> 
          <p>Let's look at some less-similar modern languages recently implementing string interpolation.</p> 
         </div> 
         <div class="section" id="scala"> 
          <h3><a class="toc-backref" href="#id85">Scala</a></h3> 
          <p><a class="reference external" href="http://docs.scala-lang.org/overviews/core/string-interpolation.html">Scala interpolation</a> <a class="footnote-reference" href="#id44" id="id45">[23]</a> is directed through string prefixes. Each prefix has a different result:</p> 
          <pre class="literal-block">s"Hello, $name ${1 + 1}"                    # arbitrary
f"$name%s is $height%2.2f meters tall"      # printf-style
raw"a\nb"                                   # raw, like r''
</pre> 
          <p>These prefixes may also be implemented by the user, by extending Scala's <tt class="docutils literal">StringContext</tt> class.</p> 
          <ul class="simple"> 
           <li>Explicit interpolation within double quotes with literal prefix.</li> 
           <li>User implemented prefixes supported.</li> 
           <li>Arbitrary expressions are supported.</li> 
          </ul> 
         </div> 
         <div class="section" id="es6-javascript"> 
          <h3><a class="toc-backref" href="#id86">ES6 (Javascript)</a></h3> 
          <p>Designers of <a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings">Template strings</a> <a class="footnote-reference" href="#id47" id="id48">[24]</a> faced the same issue as Python where single and double quotes were taken. Unlike Python however, "backticks" were not. Despite <a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2007-January/000054.html">their issues</a> <a class="footnote-reference" href="#id33" id="id46">[18]</a>, they were chosen as part of the ECMAScript 2015 (ES6) standard:</p> 
          <pre class="literal-block">console.log(`Fifteen is ${a + b} and\nnot ${2 * a + b}.`);
</pre> 
          <p>Custom prefixes are also supported by implementing a function the same name as the tag:</p> 
          <pre class="literal-block">function tag(strings, ...values) {
    console.log(strings.raw[0]);    // raw string is also available
    return "Bazinga!";
}
tag`Hello ${ a + b } world ${ a * b}`;
</pre> 
          <ul class="simple"> 
           <li>Explicit interpolation within backticks.</li> 
           <li>User implemented prefixes supported.</li> 
           <li>Arbitrary expressions are supported.</li> 
          </ul> 
         </div> 
         <div class="section" id="c-version-6"> 
          <h3><a class="toc-backref" href="#id87">C#, Version 6</a></h3> 
          <p>C# has a useful new <a class="reference external" href="https://msdn.microsoft.com/en-us/library/Dn961160.aspx">interpolation feature</a> <a class="footnote-reference" href="#id49" id="id50">[25]</a> as well, with some ability to <a class="reference external" href="http://www.thomaslevesque.com/2015/02/24/customizing-string-interpolation-in-c-6/">customize interpolation</a> <a class="footnote-reference" href="#id51" id="id52">[26]</a> via the <tt class="docutils literal">IFormattable</tt> interface:</p> 
          <pre class="literal-block">$"{person.Name, 20} is {person.Age:D3} year{(p.Age == 1 ? "" : "s")} old.";
</pre> 
          <ul class="simple"> 
           <li>Explicit interpolation with double quotes and <tt class="docutils literal">$</tt> prefix.</li> 
           <li>Custom interpolations are available.</li> 
           <li>Arbitrary expressions are supported.</li> 
          </ul> 
         </div> 
         <div class="section" id="apple-s-swift"> 
          <h3><a class="toc-backref" href="#id88">Apple's Swift</a></h3> 
          <p>Arbitrary <a class="reference external" href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID292">interpolation under Swift</a> <a class="footnote-reference" href="#id53" id="id54">[27]</a> is available on all strings:</p> 
          <pre class="literal-block">let multiplier = 3
let message = "\(multiplier) times 2.5 is \(Double(multiplier) * 2.5)"
// message is "3 times 2.5 is 7.5"
</pre> 
          <ul class="simple"> 
           <li>Implicit interpolation with double quotes.</li> 
           <li>Arbitrary expressions are supported.</li> 
           <li>Cannot contain CR/LF.</li> 
          </ul> 
         </div> 
         <div class="section" id="additional-examples"> 
          <h3><a class="toc-backref" href="#id89">Additional examples</a></h3> 
          <p>A number of additional examples of string interpolation may be <a class="reference external" href="https://en.wikipedia.org/wiki/String_interpolation#Examples">found at Wikipedia</a> <a class="footnote-reference" href="#id55" id="id56">[28]</a>.</p> 
          <p>Now that background and history have been covered, let's continue on for a solution.</p> 
         </div> 
        </div> 
        <div class="section" id="new-syntax"> 
         <h2><a class="toc-backref" href="#id90">New Syntax</a></h2> 
         <p>This should be an option of last resort, as every new syntax feature has a cost in terms of real-estate in a brain it inhabits. There is however one alternative left on our list of possibilities, which follows.</p> 
        </div> 
        <div class="section" id="new-string-prefix"> 
         <h2><a class="toc-backref" href="#id91">New String Prefix</a></h2> 
         <p>Given the history of string formatting in Python and backwards-compatibility, implementations in other languages, avoidance of new syntax unless necessary, an acceptable design is reached through elimination rather than unique insight. Therefore, marking interpolated string literals with a string prefix is chosen.</p> 
         <p>We also choose an expression syntax that reuses and builds on the strongest of the existing choices, <tt class="docutils literal">str.format()</tt> to avoid further duplication of functionality:</p> 
         <pre class="literal-block">&gt;&gt;&gt; location = 'World'
&gt;&gt;&gt; f'Hello, {location} !'      # new prefix: f''
'Hello, World !'                # interpolated result
</pre> 
         <p><a class="reference external" href="/dev/peps/pep-0498">PEP 498</a> -- Literal String Formatting, delves into the mechanics and implementation of this design.</p> 
        </div> 
       </div> 
       <div class="section" id="additional-topics"> 
        <h1><a class="toc-backref" href="#id92">Additional Topics</a></h1> 
        <div class="section" id="safety"> 
         <h2><a class="toc-backref" href="#id93">Safety</a></h2> 
         <p>In this section we will describe the safety situation and precautions taken in support of format-strings.</p> 
         <ol class="arabic"> 
          <li><p class="first">Only string literals have been considered for format-strings, not variables to be taken as input or passed around, making external attacks difficult to accomplish.</p> <p><tt class="docutils literal">str.format()</tt> and alternatives <a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-July/034729.html">already handle</a> <a class="footnote-reference" href="#id57" id="id58">[29]</a> this use-case.</p> </li> 
          <li><p class="first">Neither <tt class="docutils literal">locals()</tt> nor <tt class="docutils literal">globals()</tt> are necessary nor used during the transformation, avoiding leakage of information.</p> </li> 
          <li><p class="first">To eliminate complexity as well as <tt class="docutils literal">RuntimeError</tt> (s) due to recursion depth, recursive interpolation is not supported.</p> </li> 
         </ol> 
         <p>However, mistakes or malicious code could be missed inside string literals. Though that can be said of code in general, that these expressions are inside strings means they are a bit more likely to be obscured.</p> 
         <div class="section" id="mitigation-via-tools"> 
          <h3><a class="toc-backref" href="#id94">Mitigation via Tools</a></h3> 
          <p>The idea is that tools or linters such as pyflakes, pylint, or Pycharm, may check inside strings with expressions and mark them up appropriately. As this is a common task with programming languages today, multi-language tools won't have to implement this feature solely for Python, significantly shortening time to implementation.</p> 
          <p>Farther in the future, strings might also be checked for constructs that exceed the safety policy of a project.</p> 
         </div> 
        </div> 
        <div class="section" id="style-guide-precautions"> 
         <h2><a class="toc-backref" href="#id95">Style Guide/Precautions</a></h2> 
         <p>As arbitrary expressions may accomplish anything a Python expression is able to, it is highly recommended to avoid constructs inside format-strings that could cause side effects.</p> 
         <p>Further guidelines may be written once usage patterns and true problems are known.</p> 
        </div> 
        <div class="section" id="reference-implementation-s"> 
         <h2><a class="toc-backref" href="#id96">Reference Implementation(s)</a></h2> 
         <p>The <a class="reference external" href="https://pypi.python.org/pypi/say/">say module on PyPI</a> <a class="footnote-reference" href="#id59" id="id60">[30]</a> implements string interpolation as described here with the small burden of a callable interface:</p> 
         <pre class="literal-block">＞ pip install say

from say import say
nums = list(range(4))
say("Nums has {len(nums)} items: {nums}")
</pre> 
         <p>A Python implementation of Ruby interpolation <a class="reference external" href="https://github.com/syrusakbary/interpy">is also available</a> <a class="footnote-reference" href="#id61" id="id62">[31]</a>. It uses the codecs module to do its work:</p> 
         <pre class="literal-block">＞ pip install interpy

# coding: interpy
location = 'World'
print("Hello #{location}.")
</pre> 
        </div> 
        <div class="section" id="backwards-compatibility"> 
         <h2><a class="toc-backref" href="#id97">Backwards Compatibility</a></h2> 
         <p>By using existing syntax and avoiding current or historical features, format strings were designed so as to not interfere with existing code and are not expected to cause any issues.</p> 
        </div> 
        <div class="section" id="postponed-ideas"> 
         <h2><a class="toc-backref" href="#id98">Postponed Ideas</a></h2> 
         <div class="section" id="internationalization"> 
          <h3><a class="toc-backref" href="#id99">Internationalization</a></h3> 
          <p>Though it was highly desired to integrate internationalization support, (see <a class="reference external" href="/dev/peps/pep-0501">PEP 501</a>), the finer details diverge at almost every point, making a common solution unlikely: <a class="footnote-reference" href="#id28" id="id10">[15]</a></p> 
          <ul class="simple"> 
           <li>Use-cases differ</li> 
           <li>Compile vs. run-time tasks</li> 
           <li>Interpolation syntax needs</li> 
           <li>Intended audience</li> 
           <li>Security policy</li> 
          </ul> 
         </div> 
        </div> 
        <div class="section" id="rejected-ideas"> 
         <h2><a class="toc-backref" href="#id100">Rejected Ideas</a></h2> 
         <div class="section" id="restricting-syntax-to-str-format-only"> 
          <h3><a class="toc-backref" href="#id101">Restricting Syntax to <tt class="docutils literal">str.format()</tt> Only</a></h3> 
          <p>The common <a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-August/034913.html">arguments against</a> <a class="footnote-reference" href="#id65" id="id66">[33]</a> support of arbitrary expressions were:</p> 
          <ol class="arabic simple"> 
           <li><a class="reference external" href="https://en.wikipedia.org/wiki/You_aren't_gonna_need_it">YAGNI</a> <a class="footnote-reference" href="#id63" id="id64">[32]</a>, "You aren't gonna need it."</li> 
           <li>The feature is not congruent with historical Python conservatism.</li> 
           <li>Postpone - can implement in a future version if need is demonstrated.</li> 
          </ol> 
          <p>Support of only <tt class="docutils literal">str.format()</tt> syntax however, was deemed not enough of a solution to the problem. Often a simple length or increment of an object, for example, is desired before printing.</p> 
          <p>It can be seen in the <a class="reference internal" href="#implementations-in-other-languages">Implementations in Other Languages</a> section that the developer community at large tends to agree. String interpolation with arbitrary expressions is becoming an industry standard in modern languages due to its utility.</p> 
         </div> 
         <div class="section" id="additional-custom-string-prefixes"> 
          <h3><a class="toc-backref" href="#id102">Additional/Custom String-Prefixes</a></h3> 
          <p>As seen in the <a class="reference internal" href="#implementations-in-other-languages">Implementations in Other Languages</a> section, many modern languages have extensible string prefixes with a common interface. This could be a way to generalize and reduce lines of code in common situations. Examples are found in ES6 (Javascript), Scala, Nim, and C# (to a lesser extent). This was rejected by the BDFL. <a class="footnote-reference" href="#id27" id="id11">[14]</a></p> 
         </div> 
         <div class="section" id="automated-escaping-of-input-variables"> 
          <h3><a class="toc-backref" href="#id103">Automated Escaping of Input Variables</a></h3> 
          <p>While helpful in some cases, this was thought to create too much uncertainty of when and where string expressions could be used safely or not. The concept was also difficult to describe to others. <a class="footnote-reference" href="#id25" id="id12">[12]</a></p> 
          <p>Always consider format string variables to be unescaped, unless the developer has explicitly escaped them.</p> 
         </div> 
         <div class="section" id="environment-access-and-command-substitution"> 
          <h3><a class="toc-backref" href="#id104">Environment Access and Command Substitution</a></h3> 
          <p>For systems programming and shell-script replacements, it would be useful to handle environment variables and capture output of commands directly in an expression string. This was rejected as not important enough, and looking too much like bash/perl, which could encourage bad habits. <a class="footnote-reference" href="#id26" id="id13">[13]</a></p> 
         </div> 
        </div> 
       </div> 
       <div class="section" id="acknowledgements"> 
        <h1><a class="toc-backref" href="#id105">Acknowledgements</a></h1> 
        <ul class="simple"> 
         <li>Eric V. Smith for the authoring and implementation of <a class="reference external" href="/dev/peps/pep-0498">PEP 498</a>.</li> 
         <li>Everyone on the python-ideas mailing list for rejecting the various crazy ideas that came up, helping to keep the final design in focus.</li> 
        </ul> 
       </div> 
       <div class="section" id="references"> 
        <h1><a class="toc-backref" href="#id106">References</a></h1> 
        <table class="docutils footnote" frame="void" id="id14" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id1">[1]</a></td>
           <td><p class="first">Briefer String Format</p> <p class="last">(<a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-July/034659.html">https://mail.python.org/pipermail/python-ideas/2015-July/034659.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id15" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id2">[2]</a></td>
           <td><p class="first">Briefer String Format</p> <p class="last">(<a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-July/034669.html">https://mail.python.org/pipermail/python-ideas/2015-July/034669.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id16" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id3">[3]</a></td>
           <td><p class="first">Briefer String Format</p> <p class="last">(<a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-July/034701.html">https://mail.python.org/pipermail/python-ideas/2015-July/034701.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id17" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id4">[4]</a></td>
           <td><p class="first">Bash Docs</p> <p class="last">(<a class="reference external" href="http://www.tldp.org/LDP/abs/html/arithexp.html">http://www.tldp.org/LDP/abs/html/arithexp.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id18" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id5">[5]</a></td>
           <td><p class="first">Bash Docs</p> <p class="last">(<a class="reference external" href="http://www.tldp.org/LDP/abs/html/commandsub.html">http://www.tldp.org/LDP/abs/html/commandsub.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id19" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id6">[6]</a></td>
           <td><p class="first">Perl Cookbook</p> <p class="last">(<a class="reference external" href="http://docstore.mik.ua/orelly/perl/cookbook/ch01_11.htm">http://docstore.mik.ua/orelly/perl/cookbook/ch01_11.htm</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id20" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id7">[7]</a></td>
           <td><p class="first">Perl Docs</p> <p class="last">(<a class="reference external" href="http://perl6maven.com/perl6-scalar-array-and-hash-interpolation">http://perl6maven.com/perl6-scalar-array-and-hash-interpolation</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id21" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id8">[8]</a></td>
           <td><p class="first">Ruby Docs</p> <p class="last">(<a class="reference external" href="http://ruby-doc.org/core-2.1.1/doc/syntax/literals_rdoc.html#label-Strings">http://ruby-doc.org/core-2.1.1/doc/syntax/literals_rdoc.html#label-Strings</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id22" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id9">[9]</a></td>
           <td><p class="first">Ruby Docs</p> <p class="last">(<a class="reference external" href="https://en.wikibooks.org/wiki/Ruby_Programming/Syntax/Literals#Interpolation">https://en.wikibooks.org/wiki/Ruby_Programming/Syntax/Literals#Interpolation</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id23" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label">[10]</td>
           <td><p class="first">Python Str.Format Syntax</p> <p class="last">(<a class="reference external" href="https://docs.python.org/3/library/string.html#format-string-syntax">https://docs.python.org/3/library/string.html#format-string-syntax</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id24" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label">[11]</td>
           <td><p class="first">Python Format-Spec Mini Language</p> <p class="last">(<a class="reference external" href="https://docs.python.org/3/library/string.html#format-specification-mini-language">https://docs.python.org/3/library/string.html#format-specification-mini-language</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id25" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id12">[12]</a></td>
           <td><p class="first">Escaping of Input Variables</p> <p class="last">(<a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-August/035532.html">https://mail.python.org/pipermail/python-ideas/2015-August/035532.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id26" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id13">[13]</a></td>
           <td><p class="first">Environment Access and Command Substitution</p> <p class="last">(<a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-August/035554.html">https://mail.python.org/pipermail/python-ideas/2015-August/035554.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id27" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id11">[14]</a></td>
           <td><p class="first">Extensible String Prefixes</p> <p class="last">(<a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-August/035336.html">https://mail.python.org/pipermail/python-ideas/2015-August/035336.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id28" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id10">[15]</a></td>
           <td><p class="first">Literal String Formatting</p> <p class="last">(<a class="reference external" href="https://mail.python.org/pipermail/python-dev/2015-August/141289.html">https://mail.python.org/pipermail/python-dev/2015-August/141289.html</a>)</p> </td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id29" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label">[16]</td>
           <td><em>(<a class="fn-backref" href="#id30">1</a>, <a class="fn-backref" href="#id43">2</a>)</em> <a class="reference external" href="https://docs.python.org/3/library/string.html#format-string-syntax">https://docs.python.org/3/library/string.html#format-string-syntax</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id31" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id32">[17]</a></td>
           <td><a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-July/034659.html">https://mail.python.org/pipermail/python-ideas/2015-July/034659.html</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id33" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label">[18]</td>
           <td><em>(<a class="fn-backref" href="#id34">1</a>, <a class="fn-backref" href="#id46">2</a>)</em> <a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2007-January/000054.html">https://mail.python.org/pipermail/python-ideas/2007-January/000054.html</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id35" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id36">[19]</a></td>
           <td><a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting">https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id37" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id38">[20]</a></td>
           <td><a class="reference external" href="https://docs.python.org/3/library/string.html#template-strings">https://docs.python.org/3/library/string.html#template-strings</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id39" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id40">[21]</a></td>
           <td><a class="reference external" href="https://docs.python.org/3/library/string.html#string.Template.safe_substitute">https://docs.python.org/3/library/string.html#string.Template.safe_substitute</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id41" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id42">[22]</a></td>
           <td><a class="reference external" href="http://pythonhosted.org/flufl.i18n/">http://pythonhosted.org/flufl.i18n/</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id44" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id45">[23]</a></td>
           <td><a class="reference external" href="http://docs.scala-lang.org/overviews/core/string-interpolation.html">http://docs.scala-lang.org/overviews/core/string-interpolation.html</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id47" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id48">[24]</a></td>
           <td><a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id49" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id50">[25]</a></td>
           <td><a class="reference external" href="https://msdn.microsoft.com/en-us/library/Dn961160.aspx">https://msdn.microsoft.com/en-us/library/Dn961160.aspx</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id51" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id52">[26]</a></td>
           <td><a class="reference external" href="http://www.thomaslevesque.com/2015/02/24/customizing-string-interpolation-in-c-6/">http://www.thomaslevesque.com/2015/02/24/customizing-string-interpolation-in-c-6/</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id53" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id54">[27]</a></td>
           <td><a class="reference external" href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID292">https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID292</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id55" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id56">[28]</a></td>
           <td><a class="reference external" href="https://en.wikipedia.org/wiki/String_interpolation#Examples">https://en.wikipedia.org/wiki/String_interpolation#Examples</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id57" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id58">[29]</a></td>
           <td><a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-July/034729.html">https://mail.python.org/pipermail/python-ideas/2015-July/034729.html</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id59" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id60">[30]</a></td>
           <td><a class="reference external" href="https://pypi.python.org/pypi/say/">https://pypi.python.org/pypi/say/</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id61" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id62">[31]</a></td>
           <td><a class="reference external" href="https://github.com/syrusakbary/interpy">https://github.com/syrusakbary/interpy</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id63" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id64">[32]</a></td>
           <td><a class="reference external" href="https://en.wikipedia.org/wiki/You_aren't_gonna_need_it">https://en.wikipedia.org/wiki/You_aren't_gonna_need_it</a></td>
          </tr> 
         </tbody> 
        </table> 
        <table class="docutils footnote" frame="void" id="id65" rules="none"> 
         <colgroup>
          <col class="label">
          <col>
         </colgroup> 
         <tbody valign="top"> 
          <tr>
           <td class="label"><a class="fn-backref" href="#id66">[33]</a></td>
           <td><a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2015-August/034913.html">https://mail.python.org/pipermail/python-ideas/2015-August/034913.html</a></td>
          </tr> 
         </tbody> 
        </table> 
       </div> 
       <div class="section" id="copyright"> 
        <h1><a class="toc-backref" href="#id107">Copyright</a></h1> 
        <p>This document has been placed in the public domain.</p> 
        <!-- Local Variables:
mode: indented-text
indent-tabs-mode: nil
sentence-end-double-space: t
fill-column: 70
coding: utf-8
End: --> 
       </div> Source: 
       <a href="https://github.com/python/peps/blob/master/pep-0502.txt">https://github.com/python/peps/blob/master/pep-0502.txt</a> 
      </article> 
     </section> 
     <aside class="left-sidebar" role="secondary"> 
      <div class="twitter-widget sidebar-widget"> 
       <a class="twitter-timeline" data-dnt="true" href="https://twitter.com/ThePSF" data-widget-id="434113224703610882">Tweets by @ThePSF</a> 
       <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script> 
      </div> 
      <div class="psf-sidebar-widget sidebar-widget"> 
       <h3 class="widget-title">The PSF</h3> 
       <p>The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. </p> 
      </div> 
     </aside> 
    </div>
    <!-- end .container --> 
   </div>
   <!-- end #content .content-wrapper --> 
   <!-- Footer and social media list --> 
   <footer id="site-map" class="main-footer" role="contentinfo"> 
    <div class="main-footer-links"> 
     <div class="container"> 
      <a id="back-to-top-1" class="jump-link" href="#python-network"><span aria-hidden="true" class="icon-arrow-up"><span>▲</span></span> Back to Top</a> 
      <ul class="sitemap navigation menu do-not-print" role="tree" id="container"> 
       <li class="tier-1 element-1"> <a href="/about/">About</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/about/apps/" title="">Applications</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/about/quotes/" title="">Quotes</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/about/gettingstarted/" title="">Getting Started</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/about/help/" title="">Help</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="http://brochure.getpython.info/" title="">Python Brochure</a></li> 
        </ul> </li> 
       <li class="tier-1 element-2"> <a href="/downloads/">Downloads</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/downloads/" title="">All releases</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/downloads/source/" title="">Source code</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/downloads/windows/" title="">Windows</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/downloads/mac-osx/" title="">Mac OS X</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="/download/other/" title="">Other Platforms</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="https://docs.python.org/3/license.html" title="">License</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="/download/alternatives" title="">Alternative Implementations</a></li> 
        </ul> </li> 
       <li class="tier-1 element-3"> <a href="/doc/">Documentation</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/doc/" title="">Docs</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/doc/av" title="">Audio/Visual Talks</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="https://wiki.python.org/moin/BeginnersGuide" title="">Beginner's Guide</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="https://devguide.python.org/" title="">Developer's Guide</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="https://docs.python.org/faq/" title="">FAQ</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="http://wiki.python.org/moin/Languages" title="">Non-English Docs</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="http://python.org/dev/peps/" title="">PEP Index</a></li> 
         <li class="tier-2 element-8" role="treeitem"><a href="https://wiki.python.org/moin/PythonBooks" title="">Python Books</a></li> 
         <li class="tier-2 element-9" role="treeitem"><a href="/doc/essays/" title="">Python Essays</a></li> 
        </ul> </li> 
       <li class="tier-1 element-4"> <a href="/community/">Community</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/community/survey" title="">Community Survey</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/community/diversity/" title="">Diversity</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/community/lists/" title="">Mailing Lists</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/community/irc/" title="">IRC</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="/community/forums/" title="">Forums</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="/psf/annual-report/2019/" title="">PSF Annual Impact Report</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="/community/workshops/" title="">Python Conferences</a></li> 
         <li class="tier-2 element-8" role="treeitem"><a href="/community/sigs/" title="">Special Interest Groups</a></li> 
         <li class="tier-2 element-9" role="treeitem"><a href="/community/logos/" title="">Python Logo</a></li> 
         <li class="tier-2 element-10" role="treeitem"><a href="https://wiki.python.org/moin/" title="">Python Wiki</a></li> 
         <li class="tier-2 element-11" role="treeitem"><a href="/community/merchandise/" title="">Merchandise</a></li> 
         <li class="tier-2 element-12" role="treeitem"><a href="/community/awards" title="">Community Awards</a></li> 
         <li class="tier-2 element-13" role="treeitem"><a href="/psf/conduct/" title="">Code of Conduct</a></li> 
        </ul> </li> 
       <li class="tier-1 element-5"> <a href="/success-stories/" title="success-stories">Success Stories</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/success-stories/category/arts/" title="">Arts</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/success-stories/category/business/" title="">Business</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/success-stories/category/education/" title="">Education</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/success-stories/category/engineering/" title="">Engineering</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="/success-stories/category/government/" title="">Government</a></li> 
         <li class="tier-2 element-6" role="treeitem"><a href="/success-stories/category/scientific/" title="">Scientific</a></li> 
         <li class="tier-2 element-7" role="treeitem"><a href="/success-stories/category/software-development/" title="">Software Development</a></li> 
        </ul> </li> 
       <li class="tier-1 element-6"> <a href="/blogs/" title="News from around the Python world">News</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/blogs/" title="Python Insider Blog Posts">Python News</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/psf/newsletter/" title="Python Software Foundation Newsletter">PSF Newsletter</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="http://planetpython.org/" title="Planet Python">Community News</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="http://pyfound.blogspot.com/" title="PSF Blog">PSF News</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="http://pycon.blogspot.com/" title="PyCon Blog">PyCon News</a></li> 
        </ul> </li> 
       <li class="tier-1 element-7"> <a href="/events/">Events</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="/events/python-events" title="">Python Events</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="/events/python-user-group/" title="">User Group Events</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="/events/python-events/past/" title="">Python Events Archive</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/events/python-user-group/past/" title="">User Group Events Archive</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="https://wiki.python.org/moin/PythonEventsCalendar#Submitting_an_Event" title="">Submit an Event</a></li> 
        </ul> </li> 
       <li class="tier-1 element-8"> <a href="/dev/">Contributing</a> 
        <ul class="subnav menu"> 
         <li class="tier-2 element-1" role="treeitem"><a href="https://devguide.python.org/" title="">Developer's Guide</a></li> 
         <li class="tier-2 element-2" role="treeitem"><a href="https://bugs.python.org/" title="">Issue Tracker</a></li> 
         <li class="tier-2 element-3" role="treeitem"><a href="https://mail.python.org/mailman/listinfo/python-dev" title="">python-dev list</a></li> 
         <li class="tier-2 element-4" role="treeitem"><a href="/dev/core-mentorship/" title="">Core Mentorship</a></li> 
         <li class="tier-2 element-5" role="treeitem"><a href="/dev/security/" title="">Report a Security Issue</a></li> 
        </ul> </li> 
      </ul> 
      <a id="back-to-top-2" class="jump-link" href="#python-network"><span aria-hidden="true" class="icon-arrow-up"><span>▲</span></span> Back to Top</a> 
     </div>
     <!-- end .container --> 
    </div> 
    <!-- end .main-footer-links --> 
    <div class="site-base"> 
     <div class="container"> 
      <ul class="footer-links navigation menu do-not-print" role="tree"> 
       <li class="tier-1 element-1"><a href="/about/help/">Help &amp; <span class="say-no-more">General</span> Contact</a></li> 
       <li class="tier-1 element-2"><a href="/community/diversity/">Diversity <span class="say-no-more">Initiatives</span></a></li> 
       <li class="tier-1 element-3"><a href="https://github.com/python/pythondotorg/issues">Submit Website Bug</a></li> 
       <li class="tier-1 element-4"> <a href="https://status.python.org/">Status <span class="python-status-indicator-default" id="python-status-indicator"></span></a> </li> 
      </ul> 
      <div class="copyright"> 
       <p><small> <span class="pre">Copyright ©2001-2020.</span> &nbsp;<span class="pre"><a href="/psf-landing/">Python Software Foundation</a></span> &nbsp;<span class="pre"><a href="/about/legal/">Legal Statements</a></span> &nbsp;<span class="pre"><a href="/privacy/">Privacy Policy</a></span> &nbsp;<span class="pre"><a href="/psf/sponsorship/sponsors/#heroku">Powered by Heroku</a></span> </small></p> 
      </div> 
     </div>
     <!-- end .container --> 
    </div>
    <!-- end .site-base --> 
   </footer> 
  </div>
  <!-- end #touchnav-wrapper --> 
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script> 
  <script>window.jQuery || document.write('<script src="/static/js/libs/jquery-1.8.2.min.js"><\/script>')</script> 
  <script src="/static/js/libs/masonry.pkgd.min.js"></script> 
  <script src="/static/js/libs/html-includes.js"></script> 
  <script type="text/javascript" src="/static/js/main-min.037d9037f112.js" charset="utf-8"></script> 
  <!--[if lte IE 7]>
    <script type="text/javascript" src="/static/js/plugins/IE8-min.798605d5f7a2.js" charset="utf-8"></script>
    
    
    <![endif]--> 
  <!--[if lte IE 8]>
    <script type="text/javascript" src="/static/js/plugins/getComputedStyle-min.c3860be1d290.js" charset="utf-8"></script>
    
    
    <![endif]-->   
 </body>
</html>